# NOTE:: Experiment to improve vim switching from input-mode to normal-mode
# For details, see:
# - https://www.reddit.com/r/vim/comments/40257u/delay_on_esc_with_tmux_and_vim/
# - https://unix.stackexchange.com/questions/608142/whats-the-effect-of-escape-time-in-tmux
# - https://www.reddit.com/r/neovim/comments/1fx5k29/someone_who_has_used_the_lazyvim_distro_please/?share_id=R3teROyeJyUDu15vUkkKp&utm_content=1&utm_medium=android_app&utm_name=androidcss&utm_source=share&utm_term=2
set -sg escape-time 0

#set -g status-left "hello world"
set-option -g allow-rename off

# move status bar to the top (useful when teaching tmux)
#set-window-option -g status-position top

# change prefix from Ctrl-b to Ctrl-a
#set-option -g prefix C-a

# use powerline ----------------------------------------------------------------
source /usr/share/powerline/bindings/tmux/powerline.conf

# vim powerline: this setting is required so that vim with powerline also displays colors
set -g default-terminal "screen-256color"

# tmux-network-bandwidth -------------------------------------------------------
#
# Source: https://github.com/xamut/tmux-network-bandwidth
#
# For patching the "status-right" I first copied the current settings used by powerline:
#
# From within tmux:
#
#    tmux show-options -g | rg "^status-right "
#
# I then prepended `#{network_bandwidth}`...
#
#set-option -g status-right "#{network_bandwidth} #(env \"\\$POWERLINE_COMMAND\" \\$POWERLINE_COMMAND_ARGS tmux right --width=#{client_width} -R width_adjust=#{status-left-length} -R pane_id=#{pane_id} -R pane_current_path=#{q:pane_current_path})"
#set-option -g status-right "#{network_bandwidth} #(env \"\$POWERLINE_COMMAND\" \$POWERLINE_COMMAND_ARGS tmux right -R pane_id=#{pane_id} --width=#{client_width} -R width_adjust=#{status-left-length})"
#
# This line must be placed after `set-option -g status-right...`
#run-shell ~/.dotfiles/tmux/tmux-network-bandwidth/tmux-network-bandwidth.tmux

# tmux-yank --------------------------------------------------------------------
#
# Instructions from https://www.seanh.cc/2020/12/27/copy-and-paste-in-tmux/
#
set -g mouse on

# These bindings are for X Windows only. If you're using a different
# window system you have to replace the `xsel` commands with something
# else. See https://github.com/tmux/tmux/wiki/Clipboard#available-tools
#bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
#bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
#bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
#bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
#bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
#bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
#bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

# PD load tmux-yank manually (without tmux package manager)
#run-shell ~/.dotfile/tmux/tmux-yank/yank.tmux

#set -g @yank_action 'copy-pipe-no-clear'
#bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
#bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# From https://wiki.archlinux.org/title/Tmux
# Vim style
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy && wl-paste -n | wl-copy -p"
bind-key P run "wl-paste -n | tmux load-buffer - ; tmux paste-buffer"
