# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Terminus 14px

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
# Requires `kitty` terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
#
# Requires `j4-dmenu-desktop`
#bindsym $mod+d exec j4-dmenu-desktop
#
# Requires `rofi`
bindsym $mod+d exec "rofi -show run -modi run,drun -lines 20 -eh 1.3 -bw 0"
bindsym $mod+Shift+d exec "rofi -show drun -modi run,drun -lines 20 -eh 1.3 -bw 0"
bindsym $mod+c exec "nautilus"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# First impression: stacking and tabbed are identical -> only difference is the display; i'll try
# tabbed only first....
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# Note to self: I don't see the benefit of having named workspaces (yet!)
set $ws1    "1"
set $ws2    "2"
set $ws3    "3"
set $ws4    "4"
set $ws5    "5"
set $ws6    "6"
set $ws7    "7"
set $ws8    "8"
set $ws9    "9"
set $ws10   "10"

# see output of `xrandr --listmonitors` and `xrandr --current` to determine which monitor is which
set $left-monitor   "DVI-I-1"
set $right-monitor   "DVI-D-0"

workspace $ws1 output  $left-monitor
workspace $ws2 output  $right-monitor
workspace $ws3 output  $left-monitor
workspace $ws4 output  $right-monitor
workspace $ws5 output  $left-monitor
workspace $ws6 output  $right-monitor
workspace $ws7 output  $left-monitor
workspace $ws8 output  $right-monitor
workspace $ws9 output  $left-monitor
workspace $ws10 output $right-monitor

# assign program to workspace
# Note to self: This does not mean that the following apps can't be reassigned to a different workplace - it's just the default workspace.
# Note to self: I don't see the benefit of assigning applications to workspaces (yet?)
# assign [class="kitty"]         $ws1
# assign [class="[Cc]ode"]       $ws2
# assign [class="[Rr]ider"]      $ws2
# assign [class="[Cc]hromium"]   $ws3
# assign [class="[Ff]irefox"]    $ws3
# assign [class="eog"]           $ws6
# assign [class="evince"]        $ws6
# assign [class="[Ss]ignal"]     $ws8
# assign [class="[Tt]elegram*"]  $ws8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Open specific applications in floating mode
for_window [class="[Zz]oom"] floating enable resize set 800 600
for_window [class="[Kk]ee[Pp]ass"] floating enable resize set 800 600
for_window [class="Volume Control"] floating enable resize set 800 600
for_window [class="[Ss]ignal"] floating enable resize set 800 600

# ------------------------------------------------------------
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3-msg exit

# ------------------------------------------------------------
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Colors from https://github.com/bookercodes/dotfiles/blob/ubuntu/.i3/config
#
set $bg-color 	         #000000
set $inactive-bg-color   #000000
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
# client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# ------------------------------------------------------------
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	# i3status:
        # status_command i3status --config "~/.dotfiles/.config/i3/i3status-desktop.conf"
	# i3blocks:
        status_command SCRIPT_DIR=~/.dotfiles/.config/i3/i3blocks i3blocks -c ~/.dotfiles/.config/i3/i3blocks-desktop.conf

        # Font for i3 bar:
#        font pango:FantasqueSansMono Nerd Font 12
        font pango:JetBrainsMono Nerd Font 10
#        font pango:Terminus 14px
	colors {
		background $bg-color
	    	separator #757575
		#                  border             background         text
		#focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	}
}

# toggle bar
bindsym $mod+m bar mode toggle

# ------------------------------------------------------------
# exit i3 (logs you out of your X session)
# Requires arch package `i3lock`.
set $System System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$System" {
    bindsym l exec --no-startup-id i3lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+s mode "$System"

# ------------------------------------------------------------
# Toggle keyboard layout between german and us layout
#
# https://superuser.com/questions/1147320/how-to-change-keyboard-layout-in-i3
# http://docs.slackware.com/howtos:window_managers:keyboard_layout_in_i3
#setxkpmap -layout us,de
#setxkbmap -option 'grp:ctrl_alt_toggle'
# above didn't work out of the box...
#
# Use mode+x for german, because mod+d is already used by
# dmenu key-binding...
bindsym $mod+x exec setxkbmap de
bindsym $mod+u exec setxkbmap us

# TODO changing keyboard layout doesn't work on desktop: once I switch to german layout the caps-key
# behaves like a "normal caps-key", so I can't use it as a modifier anymore.

# ------------------------------------------------------------
# Pulse Audio controls
#
# Useful tools:
#
# - `pavucontrol` -> simple audio mixer, can switch output devices
# - `alsamixer` -> more low-level than `pavucontrol`, does the same thing
#
# Simple applet: `volumeicon` -> works
#
# Note: Each `sink` corresponds to an output device.
#
# Example:
#
# `pactl set-sink-volume 0 +5%`
#
# increases the volume of output device 0 by 5 percent.
#
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume 0 +5%; pactl set-sink-volume 1 +5%;"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume 0 -5%; pactl set-sink-volume 1 -5%;"
bindsym XF86AudioMute exec --no-startup-id "pactl set-sink-mute 0 toggle; pactl set-sink-mute 1 toggle"

# ------------------------------------------------------------
# Media player controls
#
# Requires application `playerctl`
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# ------------------------------------------------------------
# TODO: Screen brightness controls
#bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
#bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# ------------------------------------------------------------
# Autostart applications

# network manager
exec --no-startup-id nm-applet

# audio volume control
#
# NOTE: This icon can be configured to use any audio mixer.
# Right-click on the volume-icon, select 'Preferences' -> 'Status Icon' -> 'External mixer' -> 'pavucontrol'
exec --no-startup-id volumeicon
